version: '3.7'

services:

  webapp:
    restart: always
    build: ./webapp
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ./webapp:/srv/webapp
    env_file: docker-environ
    command: /usr/local/bin/gunicorn app.wsgi:application -w 2 -b :8000 --capture-output --enable-stdio-inheritance --log-level=info --access-logfile=- --log-file=- --chdir /srv/webapp --reload

  scheduler:
    restart: always
    build: ./webapp
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ./webapp:/srv/webapp
      - tmp-data:/tmp/scheduler
    env_file: docker-environ
    command: celery -A app beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=/tmp/scheduler/celerybeat.pid -l info

  worker_fetching:
    restart: always
    build: ./webapp
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ./webapp:/srv/webapp
    env_file: docker-environ
    command: celery -A app worker -l info -Q fetching

  worker_scoring:
    restart: always
    build: ./webapp
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ./webapp:/srv/webapp
    env_file: docker-environ
    command: celery -A app worker -l info -Q scoring

  http:
    restart: always
    build: ./http/
    ports:
      - "80:80"
    depends_on:
      - webapp
    links:
      - webapp:webapp
    volumes:
      - ./webapp/static:/www/static

  postgres:
    restart: always
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file: docker-environ

  redis:
    restart: always
    image: redis
    volumes:
      - redis-data:/data
    env_file: docker-environ

volumes:
  postgres-data:
  redis-data:
  tmp-data:
    driver_opts:
      type: tmpfs
      device: tmpfs
